//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_TestResult_ResultDictionary", "ResultDictionary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.ResultDictionary), "TestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.TestResult), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PartnerCost_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Partner), "PartnerCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PartnerCost), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PanelItem_Panel", "Panel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Panel), "PanelItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PanelItem), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_Analysis_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Test), "Analysis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.Analysis), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PanelItem_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Test), "PanelItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PanelItem), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PartnerCost_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Test), "PartnerCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PartnerCost), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_Test_TestSection", "TestSection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.TestSection), "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.Test), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_TestCommission_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Test), "TestCommission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.TestCommission), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_TestResult_Test", "Test", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Test), "TestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.TestResult), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_TestCommission_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Doctor), "TestCommission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.TestCommission), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_LabPatientManagement_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataRepository.Partner), "LabExamination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.LabExamination), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_LabPatientManagement_PatientType", "PatientType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataRepository.PatientType), "LabExamination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.LabExamination), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_Analysis_PatientItem", "PatientItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.PatientItem), "Analysis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.Analysis), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PatientItem_LabExamination", "LabExamination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.LabExamination), "PatientItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PatientItem), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_PatientItem_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Patient), "PatientItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.PatientItem), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_Result_Analysis", "Analysis", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataRepository.Analysis), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.Result), true)]
[assembly: EdmRelationshipAttribute("LabManager_ClientModel", "FK_Result_Analyte", "Analyte", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataRepository.Analyte), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataRepository.Result), true)]

#endregion

namespace DataRepository
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LabManager_ClientEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LabManager_ClientEntities object using the connection string found in the 'LabManager_ClientEntities' section of the application configuration file.
        /// </summary>
        public LabManager_ClientEntities() : base("name=LabManager_ClientEntities", "LabManager_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LabManager_ClientEntities object.
        /// </summary>
        public LabManager_ClientEntities(string connectionString) : base(connectionString, "LabManager_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LabManager_ClientEntities object.
        /// </summary>
        public LabManager_ClientEntities(EntityConnection connection) : base(connection, "LabManager_ClientEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Analysis> Analyses
        {
            get
            {
                if ((_Analyses == null))
                {
                    _Analyses = base.CreateObjectSet<Analysis>("Analyses");
                }
                return _Analyses;
            }
        }
        private ObjectSet<Analysis> _Analyses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Analyte> Analytes
        {
            get
            {
                if ((_Analytes == null))
                {
                    _Analytes = base.CreateObjectSet<Analyte>("Analytes");
                }
                return _Analytes;
            }
        }
        private ObjectSet<Analyte> _Analytes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientType> PatientTypes
        {
            get
            {
                if ((_PatientTypes == null))
                {
                    _PatientTypes = base.CreateObjectSet<PatientType>("PatientTypes");
                }
                return _PatientTypes;
            }
        }
        private ObjectSet<PatientType> _PatientTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultDictionary> ResultDictionaries
        {
            get
            {
                if ((_ResultDictionaries == null))
                {
                    _ResultDictionaries = base.CreateObjectSet<ResultDictionary>("ResultDictionaries");
                }
                return _ResultDictionaries;
            }
        }
        private ObjectSet<ResultDictionary> _ResultDictionaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestCommission> TestCommissions
        {
            get
            {
                if ((_TestCommissions == null))
                {
                    _TestCommissions = base.CreateObjectSet<TestCommission>("TestCommissions");
                }
                return _TestCommissions;
            }
        }
        private ObjectSet<TestCommission> _TestCommissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestResult> TestResults
        {
            get
            {
                if ((_TestResults == null))
                {
                    _TestResults = base.CreateObjectSet<TestResult>("TestResults");
                }
                return _TestResults;
            }
        }
        private ObjectSet<TestResult> _TestResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestSection> TestSections
        {
            get
            {
                if ((_TestSections == null))
                {
                    _TestSections = base.CreateObjectSet<TestSection>("TestSections");
                }
                return _TestSections;
            }
        }
        private ObjectSet<TestSection> _TestSections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PartnerCost> PartnerCosts
        {
            get
            {
                if ((_PartnerCosts == null))
                {
                    _PartnerCosts = base.CreateObjectSet<PartnerCost>("PartnerCosts");
                }
                return _PartnerCosts;
            }
        }
        private ObjectSet<PartnerCost> _PartnerCosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Partner> Partners
        {
            get
            {
                if ((_Partners == null))
                {
                    _Partners = base.CreateObjectSet<Partner>("Partners");
                }
                return _Partners;
            }
        }
        private ObjectSet<Partner> _Partners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PanelItem> PanelItems
        {
            get
            {
                if ((_PanelItems == null))
                {
                    _PanelItems = base.CreateObjectSet<PanelItem>("PanelItems");
                }
                return _PanelItems;
            }
        }
        private ObjectSet<PanelItem> _PanelItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Panel> Panels
        {
            get
            {
                if ((_Panels == null))
                {
                    _Panels = base.CreateObjectSet<Panel>("Panels");
                }
                return _Panels;
            }
        }
        private ObjectSet<Panel> _Panels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Test> Tests
        {
            get
            {
                if ((_Tests == null))
                {
                    _Tests = base.CreateObjectSet<Test>("Tests");
                }
                return _Tests;
            }
        }
        private ObjectSet<Test> _Tests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LabExamination> LabExaminations
        {
            get
            {
                if ((_LabExaminations == null))
                {
                    _LabExaminations = base.CreateObjectSet<LabExamination>("LabExaminations");
                }
                return _LabExaminations;
            }
        }
        private ObjectSet<LabExamination> _LabExaminations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientItem> PatientItems
        {
            get
            {
                if ((_PatientItems == null))
                {
                    _PatientItems = base.CreateObjectSet<PatientItem>("PatientItems");
                }
                return _PatientItems;
            }
        }
        private ObjectSet<PatientItem> _PatientItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Analyses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalyses(Analysis analysis)
        {
            base.AddObject("Analyses", analysis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Analytes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalytes(Analyte analyte)
        {
            base.AddObject("Analytes", analyte);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientTypes(PatientType patientType)
        {
            base.AddObject("PatientTypes", patientType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultDictionaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultDictionaries(ResultDictionary resultDictionary)
        {
            base.AddObject("ResultDictionaries", resultDictionary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestCommissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestCommissions(TestCommission testCommission)
        {
            base.AddObject("TestCommissions", testCommission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestResults(TestResult testResult)
        {
            base.AddObject("TestResults", testResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestSections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestSections(TestSection testSection)
        {
            base.AddObject("TestSections", testSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PartnerCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartnerCosts(PartnerCost partnerCost)
        {
            base.AddObject("PartnerCosts", partnerCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Partners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartners(Partner partner)
        {
            base.AddObject("Partners", partner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PanelItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPanelItems(PanelItem panelItem)
        {
            base.AddObject("PanelItems", panelItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Panels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPanels(Panel panel)
        {
            base.AddObject("Panels", panel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTests(Test test)
        {
            base.AddObject("Tests", test);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LabExaminations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLabExaminations(LabExamination labExamination)
        {
            base.AddObject("LabExaminations", labExamination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientItems(PatientItem patientItem)
        {
            base.AddObject("PatientItems", patientItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="filterText">No Metadata Documentation available.</param>
        /// <param name="searchType">No Metadata Documentation available.</param>
        public ObjectResult<SearchTestSection_Result> SearchTestSection(global::System.String filterText, global::System.String searchType)
        {
            ObjectParameter filterTextParameter;
            if (filterText != null)
            {
                filterTextParameter = new ObjectParameter("FilterText", filterText);
            }
            else
            {
                filterTextParameter = new ObjectParameter("FilterText", typeof(global::System.String));
            }
    
            ObjectParameter searchTypeParameter;
            if (searchType != null)
            {
                searchTypeParameter = new ObjectParameter("SearchType", searchType);
            }
            else
            {
                searchTypeParameter = new ObjectParameter("SearchType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SearchTestSection_Result>("SearchTestSection", filterTextParameter, searchTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="testName">No Metadata Documentation available.</param>
        /// <param name="testSectionName">No Metadata Documentation available.</param>
        /// <param name="panelName">No Metadata Documentation available.</param>
        public ObjectResult<SearchTest_Result> SearchTest(global::System.String testName, global::System.String testSectionName, global::System.String panelName)
        {
            ObjectParameter testNameParameter;
            if (testName != null)
            {
                testNameParameter = new ObjectParameter("TestName", testName);
            }
            else
            {
                testNameParameter = new ObjectParameter("TestName", typeof(global::System.String));
            }
    
            ObjectParameter testSectionNameParameter;
            if (testSectionName != null)
            {
                testSectionNameParameter = new ObjectParameter("TestSectionName", testSectionName);
            }
            else
            {
                testSectionNameParameter = new ObjectParameter("TestSectionName", typeof(global::System.String));
            }
    
            ObjectParameter panelNameParameter;
            if (panelName != null)
            {
                panelNameParameter = new ObjectParameter("PanelName", panelName);
            }
            else
            {
                panelNameParameter = new ObjectParameter("PanelName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SearchTest_Result>("SearchTest", testNameParameter, testSectionNameParameter, panelNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="filterText">No Metadata Documentation available.</param>
        /// <param name="searchType">No Metadata Documentation available.</param>
        public ObjectResult<SearchTestByName_Result> SearchTestByName(global::System.String filterText, global::System.String searchType)
        {
            ObjectParameter filterTextParameter;
            if (filterText != null)
            {
                filterTextParameter = new ObjectParameter("FilterText", filterText);
            }
            else
            {
                filterTextParameter = new ObjectParameter("FilterText", typeof(global::System.String));
            }
    
            ObjectParameter searchTypeParameter;
            if (searchType != null)
            {
                searchTypeParameter = new ObjectParameter("SearchType", searchType);
            }
            else
            {
                searchTypeParameter = new ObjectParameter("SearchType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SearchTestByName_Result>("SearchTestByName", filterTextParameter, searchTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="filterText">No Metadata Documentation available.</param>
        /// <param name="searchType">No Metadata Documentation available.</param>
        public ObjectResult<SearchTestByNameForPanel_Result> SearchTestByNameForPanel(global::System.String filterText, global::System.String searchType)
        {
            ObjectParameter filterTextParameter;
            if (filterText != null)
            {
                filterTextParameter = new ObjectParameter("FilterText", filterText);
            }
            else
            {
                filterTextParameter = new ObjectParameter("FilterText", typeof(global::System.String));
            }
    
            ObjectParameter searchTypeParameter;
            if (searchType != null)
            {
                searchTypeParameter = new ObjectParameter("SearchType", searchType);
            }
            else
            {
                searchTypeParameter = new ObjectParameter("SearchType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SearchTestByNameForPanel_Result>("SearchTestByNameForPanel", filterTextParameter, searchTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="length">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> GeneratePatientNumber(Nullable<global::System.Int32> length)
        {
            ObjectParameter lengthParameter;
            if (length.HasValue)
            {
                lengthParameter = new ObjectParameter("Length", length);
            }
            else
            {
                lengthParameter = new ObjectParameter("Length", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("GeneratePatientNumber", lengthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="length">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> GenerateLabExaminationNumber(Nullable<global::System.Int32> length)
        {
            ObjectParameter lengthParameter;
            if (length.HasValue)
            {
                lengthParameter = new ObjectParameter("Length", length);
            }
            else
            {
                lengthParameter = new ObjectParameter("Length", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("GenerateLabExaminationNumber", lengthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="patientId">No Metadata Documentation available.</param>
        /// <param name="patientName">No Metadata Documentation available.</param>
        /// <param name="phone">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="identifierNumber">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="partnerId">No Metadata Documentation available.</param>
        /// <param name="orderNumber">No Metadata Documentation available.</param>
        /// <param name="receivedDate">No Metadata Documentation available.</param>
        public ObjectResult<PatientsGets_Result> PatientsGets(Nullable<global::System.Int32> patientId, global::System.String patientName, global::System.String phone, global::System.String email, global::System.String identifierNumber, global::System.String address, Nullable<global::System.Int32> partnerId, Nullable<global::System.Int32> orderNumber, Nullable<global::System.DateTime> receivedDate)
        {
            ObjectParameter patientIdParameter;
            if (patientId.HasValue)
            {
                patientIdParameter = new ObjectParameter("PatientId", patientId);
            }
            else
            {
                patientIdParameter = new ObjectParameter("PatientId", typeof(global::System.Int32));
            }
    
            ObjectParameter patientNameParameter;
            if (patientName != null)
            {
                patientNameParameter = new ObjectParameter("PatientName", patientName);
            }
            else
            {
                patientNameParameter = new ObjectParameter("PatientName", typeof(global::System.String));
            }
    
            ObjectParameter phoneParameter;
            if (phone != null)
            {
                phoneParameter = new ObjectParameter("Phone", phone);
            }
            else
            {
                phoneParameter = new ObjectParameter("Phone", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter identifierNumberParameter;
            if (identifierNumber != null)
            {
                identifierNumberParameter = new ObjectParameter("IdentifierNumber", identifierNumber);
            }
            else
            {
                identifierNumberParameter = new ObjectParameter("IdentifierNumber", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter partnerIdParameter;
            if (partnerId.HasValue)
            {
                partnerIdParameter = new ObjectParameter("PartnerId", partnerId);
            }
            else
            {
                partnerIdParameter = new ObjectParameter("PartnerId", typeof(global::System.Int32));
            }
    
            ObjectParameter orderNumberParameter;
            if (orderNumber.HasValue)
            {
                orderNumberParameter = new ObjectParameter("OrderNumber", orderNumber);
            }
            else
            {
                orderNumberParameter = new ObjectParameter("OrderNumber", typeof(global::System.Int32));
            }
    
            ObjectParameter receivedDateParameter;
            if (receivedDate.HasValue)
            {
                receivedDateParameter = new ObjectParameter("ReceivedDate", receivedDate);
            }
            else
            {
                receivedDateParameter = new ObjectParameter("ReceivedDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<PatientsGets_Result>("PatientsGets", patientIdParameter, patientNameParameter, phoneParameter, emailParameter, identifierNumberParameter, addressParameter, partnerIdParameter, orderNumberParameter, receivedDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="labExaminationId">No Metadata Documentation available.</param>
        public ObjectResult<TestResultsGet_Result> PatientTestResultsGet(Nullable<global::System.Int32> labExaminationId)
        {
            ObjectParameter labExaminationIdParameter;
            if (labExaminationId.HasValue)
            {
                labExaminationIdParameter = new ObjectParameter("LabExaminationId", labExaminationId);
            }
            else
            {
                labExaminationIdParameter = new ObjectParameter("LabExaminationId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TestResultsGet_Result>("PatientTestResultsGet", labExaminationIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="labExaminationId">No Metadata Documentation available.</param>
        public ObjectResult<Report_PatientResult> Report_PatientResult(Nullable<global::System.Int32> labExaminationId)
        {
            ObjectParameter labExaminationIdParameter;
            if (labExaminationId.HasValue)
            {
                labExaminationIdParameter = new ObjectParameter("LabExaminationId", labExaminationId);
            }
            else
            {
                labExaminationIdParameter = new ObjectParameter("LabExaminationId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Report_PatientResult>("Report_PatientResult", labExaminationIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Analysis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Analysis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Analysis object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientItemId">Initial value of the PatientItemId property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Analysis CreateAnalysis(global::System.Int32 id, global::System.Int32 patientItemId, global::System.Int32 testId, global::System.Int32 status)
        {
            Analysis analysis = new Analysis();
            analysis.Id = id;
            analysis.PatientItemId = patientItemId;
            analysis.TestId = testId;
            analysis.Status = status;
            return analysis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientItemId
        {
            get
            {
                return _PatientItemId;
            }
            set
            {
                OnPatientItemIdChanging(value);
                ReportPropertyChanging("PatientItemId");
                _PatientItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientItemId");
                OnPatientItemIdChanged();
            }
        }
        private global::System.Int32 _PatientItemId;
        partial void OnPatientItemIdChanging(global::System.Int32 value);
        partial void OnPatientItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedDate
        {
            get
            {
                return _CompletedDate;
            }
            set
            {
                OnCompletedDateChanging(value);
                ReportPropertyChanging("CompletedDate");
                _CompletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedDate");
                OnCompletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedDate;
        partial void OnCompletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReleasedDate
        {
            get
            {
                return _ReleasedDate;
            }
            set
            {
                OnReleasedDateChanging(value);
                ReportPropertyChanging("ReleasedDate");
                _ReleasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleasedDate");
                OnReleasedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReleasedDate;
        partial void OnReleasedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReleasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Analysis_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_Analysis_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_Analysis_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_Analysis_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LabManager_ClientModel.FK_Analysis_Test", "Test", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Analysis_PatientItem", "PatientItem")]
        public PatientItem PatientItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientItem>("LabManager_ClientModel.FK_Analysis_PatientItem", "PatientItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientItem>("LabManager_ClientModel.FK_Analysis_PatientItem", "PatientItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientItem> PatientItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientItem>("LabManager_ClientModel.FK_Analysis_PatientItem", "PatientItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientItem>("LabManager_ClientModel.FK_Analysis_PatientItem", "PatientItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Result_Analysis", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("LabManager_ClientModel.FK_Result_Analysis", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("LabManager_ClientModel.FK_Result_Analysis", "Result", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Analyte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Analyte : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Analyte object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Analyte CreateAnalyte(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            Analyte analyte = new Analyte();
            analyte.Id = id;
            analyte.Name = name;
            analyte.IsActive = isActive;
            return analyte;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Result_Analyte", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("LabManager_ClientModel.FK_Result_Analyte", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("LabManager_ClientModel.FK_Result_Analyte", "Result", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            doctor.Name = name;
            doctor.IsActive = isActive;
            doctor.LastUpdated = lastUpdated;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hospital
        {
            get
            {
                return _Hospital;
            }
            set
            {
                OnHospitalChanging(value);
                ReportPropertyChanging("Hospital");
                _Hospital = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hospital");
                OnHospitalChanged();
            }
        }
        private global::System.String _Hospital;
        partial void OnHospitalChanging(global::System.String value);
        partial void OnHospitalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Degree
        {
            get
            {
                return _Degree;
            }
            set
            {
                OnDegreeChanging(value);
                ReportPropertyChanging("Degree");
                _Degree = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Degree");
                OnDegreeChanged();
            }
        }
        private global::System.String _Degree;
        partial void OnDegreeChanging(global::System.String value);
        partial void OnDegreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ward
        {
            get
            {
                return _Ward;
            }
            set
            {
                OnWardChanging(value);
                ReportPropertyChanging("Ward");
                _Ward = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ward");
                OnWardChanged();
            }
        }
        private global::System.String _Ward;
        partial void OnWardChanging(global::System.String value);
        partial void OnWardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private global::System.String _Other;
        partial void OnOtherChanging(global::System.String value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private Nullable<global::System.Double> _Commission;
        partial void OnCommissionChanging(Nullable<global::System.Double> value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                OnBankAccountNumberChanging(value);
                ReportPropertyChanging("BankAccountNumber");
                _BankAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccountNumber");
                OnBankAccountNumberChanged();
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestCommission_Doctor", "TestCommission")]
        public EntityCollection<TestCommission> TestCommissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCommission>("LabManager_ClientModel.FK_TestCommission_Doctor", "TestCommission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCommission>("LabManager_ClientModel.FK_TestCommission_Doctor", "TestCommission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="LabExamination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LabExamination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LabExamination object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="examinationNumber">Initial value of the ExaminationNumber property.</param>
        /// <param name="receivedDate">Initial value of the ReceivedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static LabExamination CreateLabExamination(global::System.Int32 id, global::System.Int32 patientId, global::System.String examinationNumber, global::System.DateTime receivedDate, global::System.Int32 createdBy, global::System.Int32 status, global::System.Int32 orderNumber)
        {
            LabExamination labExamination = new LabExamination();
            labExamination.Id = id;
            labExamination.PatientId = patientId;
            labExamination.ExaminationNumber = examinationNumber;
            labExamination.ReceivedDate = receivedDate;
            labExamination.CreatedBy = createdBy;
            labExamination.Status = status;
            labExamination.OrderNumber = orderNumber;
            return labExamination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExaminationNumber
        {
            get
            {
                return _ExaminationNumber;
            }
            set
            {
                OnExaminationNumberChanging(value);
                ReportPropertyChanging("ExaminationNumber");
                _ExaminationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExaminationNumber");
                OnExaminationNumberChanged();
            }
        }
        private global::System.String _ExaminationNumber;
        partial void OnExaminationNumberChanging(global::System.String value);
        partial void OnExaminationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Diagnosis
        {
            get
            {
                return _Diagnosis;
            }
            set
            {
                OnDiagnosisChanging(value);
                ReportPropertyChanging("Diagnosis");
                _Diagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Diagnosis");
                OnDiagnosisChanged();
            }
        }
        private global::System.String _Diagnosis;
        partial void OnDiagnosisChanging(global::System.String value);
        partial void OnDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private global::System.DateTime _ReceivedDate;
        partial void OnReceivedDateChanging(global::System.DateTime value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnteredDate
        {
            get
            {
                return _EnteredDate;
            }
            set
            {
                OnEnteredDateChanging(value);
                ReportPropertyChanging("EnteredDate");
                _EnteredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredDate");
                OnEnteredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnteredDate;
        partial void OnEnteredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnteredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeId
        {
            get
            {
                return _PaymentTypeId;
            }
            set
            {
                OnPaymentTypeIdChanging(value);
                ReportPropertyChanging("PaymentTypeId");
                _PaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeId");
                OnPaymentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeId;
        partial void OnPaymentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientTypeId
        {
            get
            {
                return _PatientTypeId;
            }
            set
            {
                OnPatientTypeIdChanging(value);
                ReportPropertyChanging("PatientTypeId");
                _PatientTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientTypeId");
                OnPatientTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientTypeId;
        partial void OnPatientTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatientTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentId;
        partial void OnDepartmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartnerId
        {
            get
            {
                return _PartnerId;
            }
            set
            {
                OnPartnerIdChanging(value);
                ReportPropertyChanging("PartnerId");
                _PartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerId");
                OnPartnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PartnerId;
        partial void OnPartnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPartnerIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_LabPatientManagement_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_LabPatientManagement_PatientType", "PatientType")]
        public PatientType PatientType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientType>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "PatientType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientType>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "PatientType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientType> PatientTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientType>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "PatientType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientType>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "PatientType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PatientItem_LabExamination", "PatientItem")]
        public EntityCollection<PatientItem> PatientItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientItem>("LabManager_ClientModel.FK_PatientItem_LabExamination", "PatientItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientItem>("LabManager_ClientModel.FK_PatientItem_LabExamination", "PatientItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Panel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Panel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Panel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Panel CreatePanel(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            Panel panel = new Panel();
            panel.Id = id;
            panel.Name = name;
            panel.IsActive = isActive;
            panel.LastUpdated = lastUpdated;
            return panel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PanelItem_Panel", "PanelItem")]
        public EntityCollection<PanelItem> PanelItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PanelItem>("LabManager_ClientModel.FK_PanelItem_Panel", "PanelItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PanelItem>("LabManager_ClientModel.FK_PanelItem_Panel", "PanelItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PanelItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PanelItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PanelItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="panelId">Initial value of the PanelId property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="testName">Initial value of the TestName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static PanelItem CreatePanelItem(global::System.Int32 id, global::System.Int32 panelId, global::System.Int32 testId, global::System.String testName, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            PanelItem panelItem = new PanelItem();
            panelItem.Id = id;
            panelItem.PanelId = panelId;
            panelItem.TestId = testId;
            panelItem.TestName = testName;
            panelItem.IsActive = isActive;
            panelItem.LastUpdated = lastUpdated;
            return panelItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PanelId
        {
            get
            {
                return _PanelId;
            }
            set
            {
                OnPanelIdChanging(value);
                ReportPropertyChanging("PanelId");
                _PanelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PanelId");
                OnPanelIdChanged();
            }
        }
        private global::System.Int32 _PanelId;
        partial void OnPanelIdChanging(global::System.Int32 value);
        partial void OnPanelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PanelItem_Panel", "Panel")]
        public Panel Panel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Panel>("LabManager_ClientModel.FK_PanelItem_Panel", "Panel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Panel>("LabManager_ClientModel.FK_PanelItem_Panel", "Panel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Panel> PanelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Panel>("LabManager_ClientModel.FK_PanelItem_Panel", "Panel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Panel>("LabManager_ClientModel.FK_PanelItem_Panel", "Panel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PanelItem_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PanelItem_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PanelItem_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PanelItem_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LabManager_ClientModel.FK_PanelItem_Test", "Test", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Partner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Partner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Partner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Partner CreatePartner(global::System.Int32 id, global::System.String name, global::System.String address, global::System.String email, global::System.Boolean isActive)
        {
            Partner partner = new Partner();
            partner.Id = id;
            partner.Name = name;
            partner.Address = address;
            partner.Email = email;
            partner.IsActive = isActive;
            return partner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LabId
        {
            get
            {
                return _LabId;
            }
            set
            {
                OnLabIdChanging(value);
                ReportPropertyChanging("LabId");
                _LabId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LabId");
                OnLabIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LabId;
        partial void OnLabIdChanging(Nullable<global::System.Int32> value);
        partial void OnLabIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNumber
        {
            get
            {
                return _BankAccountNumber;
            }
            set
            {
                OnBankAccountNumberChanging(value);
                ReportPropertyChanging("BankAccountNumber");
                _BankAccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccountNumber");
                OnBankAccountNumberChanged();
            }
        }
        private global::System.String _BankAccountNumber;
        partial void OnBankAccountNumberChanging(global::System.String value);
        partial void OnBankAccountNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PartnerCost_Partner", "PartnerCost")]
        public EntityCollection<PartnerCost> PartnerCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerCost>("LabManager_ClientModel.FK_PartnerCost_Partner", "PartnerCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerCost>("LabManager_ClientModel.FK_PartnerCost_Partner", "PartnerCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_LabPatientManagement_Partner", "LabExamination")]
        public EntityCollection<LabExamination> LabExaminations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LabExamination>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "LabExamination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LabExamination>("LabManager_ClientModel.FK_LabPatientManagement_Partner", "LabExamination", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PartnerCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PartnerCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartnerCost object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="partnerId">Initial value of the PartnerId property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static PartnerCost CreatePartnerCost(global::System.Int32 id, global::System.Int32 testId, global::System.Int32 partnerId, global::System.Decimal cost, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            PartnerCost partnerCost = new PartnerCost();
            partnerCost.Id = id;
            partnerCost.TestId = testId;
            partnerCost.PartnerId = partnerId;
            partnerCost.Cost = cost;
            partnerCost.IsActive = isActive;
            partnerCost.LastUpdated = lastUpdated;
            return partnerCost;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartnerId
        {
            get
            {
                return _PartnerId;
            }
            set
            {
                OnPartnerIdChanging(value);
                ReportPropertyChanging("PartnerId");
                _PartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerId");
                OnPartnerIdChanged();
            }
        }
        private global::System.Int32 _PartnerId;
        partial void OnPartnerIdChanging(global::System.Int32 value);
        partial void OnPartnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PartnerCost_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_PartnerCost_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_PartnerCost_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("LabManager_ClientModel.FK_PartnerCost_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("LabManager_ClientModel.FK_PartnerCost_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PartnerCost_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PartnerCost_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PartnerCost_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_PartnerCost_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LabManager_ClientModel.FK_PartnerCost_Test", "Test", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientNumber">Initial value of the PatientNumber property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String patientNumber, global::System.String firstName, global::System.Boolean gender, global::System.String address, global::System.String birthDate, global::System.String age, global::System.Int32 status)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.PatientNumber = patientNumber;
            patient.FirstName = firstName;
            patient.Gender = gender;
            patient.Address = address;
            patient.BirthDate = birthDate;
            patient.Age = age;
            patient.Status = status;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PatientNumber
        {
            get
            {
                return _PatientNumber;
            }
            set
            {
                OnPatientNumberChanging(value);
                ReportPropertyChanging("PatientNumber");
                _PatientNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PatientNumber");
                OnPatientNumberChanged();
            }
        }
        private global::System.String _PatientNumber;
        partial void OnPatientNumberChanging(global::System.String value);
        partial void OnPatientNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Boolean _Gender;
        partial void OnGenderChanging(global::System.Boolean value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ward
        {
            get
            {
                return _Ward;
            }
            set
            {
                OnWardChanging(value);
                ReportPropertyChanging("Ward");
                _Ward = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ward");
                OnWardChanged();
            }
        }
        private global::System.String _Ward;
        partial void OnWardChanging(global::System.String value);
        partial void OnWardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.String _BirthDate;
        partial void OnBirthDateChanging(global::System.String value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.String _Age;
        partial void OnAgeChanging(global::System.String value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChartNumber
        {
            get
            {
                return _ChartNumber;
            }
            set
            {
                OnChartNumberChanging(value);
                ReportPropertyChanging("ChartNumber");
                _ChartNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChartNumber");
                OnChartNumberChanged();
            }
        }
        private global::System.String _ChartNumber;
        partial void OnChartNumberChanging(global::System.String value);
        partial void OnChartNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedicalInsurance
        {
            get
            {
                return _MedicalInsurance;
            }
            set
            {
                OnMedicalInsuranceChanging(value);
                ReportPropertyChanging("MedicalInsurance");
                _MedicalInsurance = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedicalInsurance");
                OnMedicalInsuranceChanged();
            }
        }
        private global::System.String _MedicalInsurance;
        partial void OnMedicalInsuranceChanging(global::System.String value);
        partial void OnMedicalInsuranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NationalId
        {
            get
            {
                return _NationalId;
            }
            set
            {
                OnNationalIdChanging(value);
                ReportPropertyChanging("NationalId");
                _NationalId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NationalId");
                OnNationalIdChanged();
            }
        }
        private global::System.String _NationalId;
        partial void OnNationalIdChanging(global::System.String value);
        partial void OnNationalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndentifierNumber
        {
            get
            {
                return _IndentifierNumber;
            }
            set
            {
                OnIndentifierNumberChanging(value);
                ReportPropertyChanging("IndentifierNumber");
                _IndentifierNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndentifierNumber");
                OnIndentifierNumberChanged();
            }
        }
        private global::System.String _IndentifierNumber;
        partial void OnIndentifierNumberChanging(global::System.String value);
        partial void OnIndentifierNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PatientItem_Patient", "PatientItem")]
        public EntityCollection<PatientItem> PatientItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientItem>("LabManager_ClientModel.FK_PatientItem_Patient", "PatientItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientItem>("LabManager_ClientModel.FK_PatientItem_Patient", "PatientItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PatientItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="labExaminationId">Initial value of the LabExaminationId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static PatientItem CreatePatientItem(global::System.Int32 id, global::System.Int32 patientId, global::System.Int32 labExaminationId, global::System.DateTime lastUpdated)
        {
            PatientItem patientItem = new PatientItem();
            patientItem.Id = id;
            patientItem.PatientId = patientId;
            patientItem.LabExaminationId = labExaminationId;
            patientItem.LastUpdated = lastUpdated;
            return patientItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeOfSample
        {
            get
            {
                return _TypeOfSample;
            }
            set
            {
                OnTypeOfSampleChanging(value);
                ReportPropertyChanging("TypeOfSample");
                _TypeOfSample = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeOfSample");
                OnTypeOfSampleChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeOfSample;
        partial void OnTypeOfSampleChanging(Nullable<global::System.Int32> value);
        partial void OnTypeOfSampleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LabExaminationId
        {
            get
            {
                return _LabExaminationId;
            }
            set
            {
                OnLabExaminationIdChanging(value);
                ReportPropertyChanging("LabExaminationId");
                _LabExaminationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LabExaminationId");
                OnLabExaminationIdChanged();
            }
        }
        private global::System.Int32 _LabExaminationId;
        partial void OnLabExaminationIdChanging(global::System.Int32 value);
        partial void OnLabExaminationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Analysis_PatientItem", "Analysis")]
        public EntityCollection<Analysis> Analyses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Analysis>("LabManager_ClientModel.FK_Analysis_PatientItem", "Analysis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Analysis>("LabManager_ClientModel.FK_Analysis_PatientItem", "Analysis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PatientItem_LabExamination", "LabExamination")]
        public LabExamination LabExamination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LabExamination>("LabManager_ClientModel.FK_PatientItem_LabExamination", "LabExamination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LabExamination>("LabManager_ClientModel.FK_PatientItem_LabExamination", "LabExamination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LabExamination> LabExaminationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LabExamination>("LabManager_ClientModel.FK_PatientItem_LabExamination", "LabExamination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LabExamination>("LabManager_ClientModel.FK_PatientItem_LabExamination", "LabExamination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PatientItem_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("LabManager_ClientModel.FK_PatientItem_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("LabManager_ClientModel.FK_PatientItem_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("LabManager_ClientModel.FK_PatientItem_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("LabManager_ClientModel.FK_PatientItem_Patient", "Patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PatientType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static PatientType CreatePatientType(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            PatientType patientType = new PatientType();
            patientType.Id = id;
            patientType.Name = name;
            patientType.IsActive = isActive;
            patientType.LastUpdated = lastUpdated;
            return patientType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_LabPatientManagement_PatientType", "LabExamination")]
        public EntityCollection<LabExamination> LabExaminations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LabExamination>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "LabExamination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LabExamination>("LabManager_ClientModel.FK_LabPatientManagement_PatientType", "LabExamination", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static PaymentType CreatePaymentType(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.Id = id;
            paymentType.Name = name;
            paymentType.IsActive = isActive;
            paymentType.LastUpdated = lastUpdated;
            return paymentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="analysisId">Initial value of the AnalysisId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="lastModifiedStaffId">Initial value of the LastModifiedStaffId property.</param>
        /// <param name="isReportable">Initial value of the IsReportable property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Result CreateResult(global::System.Int32 id, global::System.Int32 analysisId, global::System.String value, global::System.Int32 lastModifiedStaffId, global::System.Boolean isReportable, global::System.DateTime lastUpdated)
        {
            Result result = new Result();
            result.Id = id;
            result.AnalysisId = analysisId;
            result.Value = value;
            result.LastModifiedStaffId = lastModifiedStaffId;
            result.IsReportable = isReportable;
            result.LastUpdated = lastUpdated;
            return result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnalysisId
        {
            get
            {
                return _AnalysisId;
            }
            set
            {
                OnAnalysisIdChanging(value);
                ReportPropertyChanging("AnalysisId");
                _AnalysisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnalysisId");
                OnAnalysisIdChanged();
            }
        }
        private global::System.Int32 _AnalysisId;
        partial void OnAnalysisIdChanging(global::System.Int32 value);
        partial void OnAnalysisIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnalyteId
        {
            get
            {
                return _AnalyteId;
            }
            set
            {
                OnAnalyteIdChanging(value);
                ReportPropertyChanging("AnalyteId");
                _AnalyteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnalyteId");
                OnAnalyteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AnalyteId;
        partial void OnAnalyteIdChanging(Nullable<global::System.Int32> value);
        partial void OnAnalyteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastModifiedStaffId
        {
            get
            {
                return _LastModifiedStaffId;
            }
            set
            {
                OnLastModifiedStaffIdChanging(value);
                ReportPropertyChanging("LastModifiedStaffId");
                _LastModifiedStaffId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedStaffId");
                OnLastModifiedStaffIdChanged();
            }
        }
        private global::System.Int32 _LastModifiedStaffId;
        partial void OnLastModifiedStaffIdChanging(global::System.Int32 value);
        partial void OnLastModifiedStaffIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReportable
        {
            get
            {
                return _IsReportable;
            }
            set
            {
                OnIsReportableChanging(value);
                ReportPropertyChanging("IsReportable");
                _IsReportable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReportable");
                OnIsReportableChanged();
            }
        }
        private global::System.Boolean _IsReportable;
        partial void OnIsReportableChanging(global::System.Boolean value);
        partial void OnIsReportableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Result_Analysis", "Analysis")]
        public Analysis Analysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analysis>("LabManager_ClientModel.FK_Result_Analysis", "Analysis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analysis>("LabManager_ClientModel.FK_Result_Analysis", "Analysis").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Analysis> AnalysisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analysis>("LabManager_ClientModel.FK_Result_Analysis", "Analysis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Analysis>("LabManager_ClientModel.FK_Result_Analysis", "Analysis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Result_Analyte", "Analyte")]
        public Analyte Analyte
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analyte>("LabManager_ClientModel.FK_Result_Analyte", "Analyte").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analyte>("LabManager_ClientModel.FK_Result_Analyte", "Analyte").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Analyte> AnalyteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Analyte>("LabManager_ClientModel.FK_Result_Analyte", "Analyte");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Analyte>("LabManager_ClientModel.FK_Result_Analyte", "Analyte", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="ResultDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultDictionary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultDictionary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static ResultDictionary CreateResultDictionary(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            ResultDictionary resultDictionary = new ResultDictionary();
            resultDictionary.Id = id;
            resultDictionary.Name = name;
            resultDictionary.IsActive = isActive;
            resultDictionary.LastUpdated = lastUpdated;
            return resultDictionary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestResult_ResultDictionary", "TestResult")]
        public EntityCollection<TestResult> TestResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestResult>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "TestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestResult>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "TestResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fisrtname">Initial value of the Fisrtname property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Staff CreateStaff(global::System.Int32 id, global::System.String fisrtname, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            Staff staff = new Staff();
            staff.Id = id;
            staff.Fisrtname = fisrtname;
            staff.IsActive = isActive;
            staff.LastUpdated = lastUpdated;
            return staff;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fisrtname
        {
            get
            {
                return _Fisrtname;
            }
            set
            {
                OnFisrtnameChanging(value);
                ReportPropertyChanging("Fisrtname");
                _Fisrtname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fisrtname");
                OnFisrtnameChanged();
            }
        }
        private global::System.String _Fisrtname;
        partial void OnFisrtnameChanging(global::System.String value);
        partial void OnFisrtnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentifierNumber
        {
            get
            {
                return _IdentifierNumber;
            }
            set
            {
                OnIdentifierNumberChanging(value);
                ReportPropertyChanging("IdentifierNumber");
                _IdentifierNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentifierNumber");
                OnIdentifierNumberChanged();
            }
        }
        private global::System.String _IdentifierNumber;
        partial void OnIdentifierNumberChanging(global::System.String value);
        partial void OnIdentifierNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Test")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Test : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Test object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="testSectionId">Initial value of the TestSectionId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="isBold">Initial value of the IsBold property.</param>
        public static Test CreateTest(global::System.Int32 id, global::System.String name, global::System.String range, global::System.Int32 createdBy, global::System.Int32 sortOrder, global::System.Int32 testSectionId, global::System.Boolean isActive, global::System.Decimal cost, global::System.Boolean isBold)
        {
            Test test = new Test();
            test.Id = id;
            test.Name = name;
            test.Range = range;
            test.CreatedBy = createdBy;
            test.SortOrder = sortOrder;
            test.TestSectionId = testSectionId;
            test.IsActive = isActive;
            test.Cost = cost;
            test.IsBold = isBold;
            return test;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LowIndex
        {
            get
            {
                return _LowIndex;
            }
            set
            {
                OnLowIndexChanging(value);
                ReportPropertyChanging("LowIndex");
                _LowIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowIndex");
                OnLowIndexChanged();
            }
        }
        private Nullable<global::System.Double> _LowIndex;
        partial void OnLowIndexChanging(Nullable<global::System.Double> value);
        partial void OnLowIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HighIndex
        {
            get
            {
                return _HighIndex;
            }
            set
            {
                OnHighIndexChanging(value);
                ReportPropertyChanging("HighIndex");
                _HighIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighIndex");
                OnHighIndexChanged();
            }
        }
        private Nullable<global::System.Double> _HighIndex;
        partial void OnHighIndexChanging(Nullable<global::System.Double> value);
        partial void OnHighIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentId;
        partial void OnDepartmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestSectionId
        {
            get
            {
                return _TestSectionId;
            }
            set
            {
                OnTestSectionIdChanging(value);
                ReportPropertyChanging("TestSectionId");
                _TestSectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestSectionId");
                OnTestSectionIdChanged();
            }
        }
        private global::System.Int32 _TestSectionId;
        partial void OnTestSectionIdChanging(global::System.Int32 value);
        partial void OnTestSectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResultType
        {
            get
            {
                return _ResultType;
            }
            set
            {
                OnResultTypeChanging(value);
                ReportPropertyChanging("ResultType");
                _ResultType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultType");
                OnResultTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ResultType;
        partial void OnResultTypeChanging(Nullable<global::System.Int32> value);
        partial void OnResultTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBold
        {
            get
            {
                return _IsBold;
            }
            set
            {
                OnIsBoldChanging(value);
                ReportPropertyChanging("IsBold");
                _IsBold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBold");
                OnIsBoldChanged();
            }
        }
        private global::System.Boolean _IsBold;
        partial void OnIsBoldChanging(global::System.Boolean value);
        partial void OnIsBoldChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Analysis_Test", "Analysis")]
        public EntityCollection<Analysis> Analyses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Analysis>("LabManager_ClientModel.FK_Analysis_Test", "Analysis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Analysis>("LabManager_ClientModel.FK_Analysis_Test", "Analysis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PanelItem_Test", "PanelItem")]
        public EntityCollection<PanelItem> PanelItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PanelItem>("LabManager_ClientModel.FK_PanelItem_Test", "PanelItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PanelItem>("LabManager_ClientModel.FK_PanelItem_Test", "PanelItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_PartnerCost_Test", "PartnerCost")]
        public EntityCollection<PartnerCost> PartnerCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerCost>("LabManager_ClientModel.FK_PartnerCost_Test", "PartnerCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerCost>("LabManager_ClientModel.FK_PartnerCost_Test", "PartnerCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Test_TestSection", "TestSection")]
        public TestSection TestSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestSection>("LabManager_ClientModel.FK_Test_TestSection", "TestSection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestSection>("LabManager_ClientModel.FK_Test_TestSection", "TestSection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestSection> TestSectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestSection>("LabManager_ClientModel.FK_Test_TestSection", "TestSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestSection>("LabManager_ClientModel.FK_Test_TestSection", "TestSection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestCommission_Test", "TestCommission")]
        public EntityCollection<TestCommission> TestCommissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCommission>("LabManager_ClientModel.FK_TestCommission_Test", "TestCommission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCommission>("LabManager_ClientModel.FK_TestCommission_Test", "TestCommission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestResult_Test", "TestResult")]
        public EntityCollection<TestResult> TestResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestResult>("LabManager_ClientModel.FK_TestResult_Test", "TestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestResult>("LabManager_ClientModel.FK_TestResult_Test", "TestResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="TestCommission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestCommission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestCommission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static TestCommission CreateTestCommission(global::System.Int32 id, global::System.Int32 testId, global::System.Int32 doctorId, global::System.Double commission, global::System.Boolean isActive, global::System.DateTime lastUpdated)
        {
            TestCommission testCommission = new TestCommission();
            testCommission.Id = id;
            testCommission.TestId = testId;
            testCommission.DoctorId = doctorId;
            testCommission.Commission = commission;
            testCommission.IsActive = isActive;
            testCommission.LastUpdated = lastUpdated;
            return testCommission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Double _Commission;
        partial void OnCommissionChanging(global::System.Double value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestCommission_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestCommission_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestCommission_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestCommission_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LabManager_ClientModel.FK_TestCommission_Test", "Test", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestCommission_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("LabManager_ClientModel.FK_TestCommission_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("LabManager_ClientModel.FK_TestCommission_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("LabManager_ClientModel.FK_TestCommission_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("LabManager_ClientModel.FK_TestCommission_Doctor", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="TestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestResult object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="resultDictionaryId">Initial value of the ResultDictionaryId property.</param>
        public static TestResult CreateTestResult(global::System.Int32 id, global::System.Int32 testId, global::System.Int32 resultDictionaryId)
        {
            TestResult testResult = new TestResult();
            testResult.Id = id;
            testResult.TestId = testId;
            testResult.ResultDictionaryId = resultDictionaryId;
            return testResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultDictionaryId
        {
            get
            {
                return _ResultDictionaryId;
            }
            set
            {
                OnResultDictionaryIdChanging(value);
                ReportPropertyChanging("ResultDictionaryId");
                _ResultDictionaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultDictionaryId");
                OnResultDictionaryIdChanged();
            }
        }
        private global::System.Int32 _ResultDictionaryId;
        partial void OnResultDictionaryIdChanging(global::System.Int32 value);
        partial void OnResultDictionaryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestResult_ResultDictionary", "ResultDictionary")]
        public ResultDictionary ResultDictionary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultDictionary>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "ResultDictionary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultDictionary>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "ResultDictionary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResultDictionary> ResultDictionaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultDictionary>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "ResultDictionary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResultDictionary>("LabManager_ClientModel.FK_TestResult_ResultDictionary", "ResultDictionary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_TestResult_Test", "Test")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestResult_Test", "Test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestResult_Test", "Test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("LabManager_ClientModel.FK_TestResult_Test", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("LabManager_ClientModel.FK_TestResult_Test", "Test", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LabManager_ClientModel", Name="TestSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestSection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TestSection CreateTestSection(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Boolean isActive)
        {
            TestSection testSection = new TestSection();
            testSection.Id = id;
            testSection.Name = name;
            testSection.Description = description;
            testSection.IsActive = isActive;
            return testSection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LabManager_ClientModel", "FK_Test_TestSection", "Test")]
        public EntityCollection<Test> Tests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Test>("LabManager_ClientModel.FK_Test_TestSection", "Test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Test>("LabManager_ClientModel.FK_Test_TestSection", "Test", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="PatientsGets_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PatientsGets_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientsGets_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="receivedDate">Initial value of the ReceivedDate property.</param>
        public static PatientsGets_Result CreatePatientsGets_Result(global::System.Int32 id, global::System.String firstName, global::System.String address, global::System.String age, global::System.Int32 orderNumber, global::System.DateTime receivedDate)
        {
            PatientsGets_Result patientsGets_Result = new PatientsGets_Result();
            patientsGets_Result.Id = id;
            patientsGets_Result.FirstName = firstName;
            patientsGets_Result.Address = address;
            patientsGets_Result.Age = age;
            patientsGets_Result.OrderNumber = orderNumber;
            patientsGets_Result.ReceivedDate = receivedDate;
            return patientsGets_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.String _Age;
        partial void OnAgeChanging(global::System.String value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private global::System.DateTime _ReceivedDate;
        partial void OnReceivedDateChanging(global::System.DateTime value);
        partial void OnReceivedDateChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="Report_PatientResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Report_PatientResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report_PatientResult object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="examinationNumber">Initial value of the ExaminationNumber property.</param>
        /// <param name="receivedDate">Initial value of the ReceivedDate property.</param>
        /// <param name="testName">Initial value of the TestName property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="testSectionId">Initial value of the TestSectionId property.</param>
        /// <param name="testSectionName">Initial value of the TestSectionName property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="isBold">Initial value of the IsBold property.</param>
        public static Report_PatientResult CreateReport_PatientResult(global::System.String firstName, global::System.String gender, global::System.String address, global::System.String age, global::System.String examinationNumber, global::System.DateTime receivedDate, global::System.String testName, global::System.String range, global::System.Int32 testSectionId, global::System.String testSectionName, global::System.String value, global::System.Boolean isBold)
        {
            Report_PatientResult report_PatientResult = new Report_PatientResult();
            report_PatientResult.FirstName = firstName;
            report_PatientResult.Gender = gender;
            report_PatientResult.Address = address;
            report_PatientResult.Age = age;
            report_PatientResult.ExaminationNumber = examinationNumber;
            report_PatientResult.ReceivedDate = receivedDate;
            report_PatientResult.TestName = testName;
            report_PatientResult.Range = range;
            report_PatientResult.TestSectionId = testSectionId;
            report_PatientResult.TestSectionName = testSectionName;
            report_PatientResult.Value = value;
            report_PatientResult.IsBold = isBold;
            return report_PatientResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.String _Age;
        partial void OnAgeChanging(global::System.String value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExaminationNumber
        {
            get
            {
                return _ExaminationNumber;
            }
            set
            {
                OnExaminationNumberChanging(value);
                ReportPropertyChanging("ExaminationNumber");
                _ExaminationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExaminationNumber");
                OnExaminationNumberChanged();
            }
        }
        private global::System.String _ExaminationNumber;
        partial void OnExaminationNumberChanging(global::System.String value);
        partial void OnExaminationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private global::System.DateTime _ReceivedDate;
        partial void OnReceivedDateChanging(global::System.DateTime value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Diagnosis
        {
            get
            {
                return _Diagnosis;
            }
            set
            {
                OnDiagnosisChanging(value);
                ReportPropertyChanging("Diagnosis");
                _Diagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Diagnosis");
                OnDiagnosisChanged();
            }
        }
        private global::System.String _Diagnosis;
        partial void OnDiagnosisChanging(global::System.String value);
        partial void OnDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestSectionId
        {
            get
            {
                return _TestSectionId;
            }
            set
            {
                OnTestSectionIdChanging(value);
                ReportPropertyChanging("TestSectionId");
                _TestSectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestSectionId");
                OnTestSectionIdChanged();
            }
        }
        private global::System.Int32 _TestSectionId;
        partial void OnTestSectionIdChanging(global::System.Int32 value);
        partial void OnTestSectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestSectionName
        {
            get
            {
                return _TestSectionName;
            }
            set
            {
                OnTestSectionNameChanging(value);
                ReportPropertyChanging("TestSectionName");
                _TestSectionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestSectionName");
                OnTestSectionNameChanged();
            }
        }
        private global::System.String _TestSectionName;
        partial void OnTestSectionNameChanging(global::System.String value);
        partial void OnTestSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LowIndex
        {
            get
            {
                return _LowIndex;
            }
            set
            {
                OnLowIndexChanging(value);
                ReportPropertyChanging("LowIndex");
                _LowIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowIndex");
                OnLowIndexChanged();
            }
        }
        private Nullable<global::System.Double> _LowIndex;
        partial void OnLowIndexChanging(Nullable<global::System.Double> value);
        partial void OnLowIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HighIndex
        {
            get
            {
                return _HighIndex;
            }
            set
            {
                OnHighIndexChanging(value);
                ReportPropertyChanging("HighIndex");
                _HighIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighIndex");
                OnHighIndexChanged();
            }
        }
        private Nullable<global::System.Double> _HighIndex;
        partial void OnHighIndexChanging(Nullable<global::System.Double> value);
        partial void OnHighIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBold
        {
            get
            {
                return _IsBold;
            }
            set
            {
                OnIsBoldChanging(value);
                ReportPropertyChanging("IsBold");
                _IsBold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBold");
                OnIsBoldChanged();
            }
        }
        private global::System.Boolean _IsBold;
        partial void OnIsBoldChanging(global::System.Boolean value);
        partial void OnIsBoldChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="SearchTest_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchTest_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTest_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="testName">Initial value of the TestName property.</param>
        /// <param name="testSectionName">Initial value of the TestSectionName property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        public static SearchTest_Result CreateSearchTest_Result(global::System.Int32 id, global::System.String testName, global::System.String testSectionName, global::System.String range)
        {
            SearchTest_Result searchTest_Result = new SearchTest_Result();
            searchTest_Result.Id = id;
            searchTest_Result.TestName = testName;
            searchTest_Result.TestSectionName = testSectionName;
            searchTest_Result.Range = range;
            return searchTest_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestSectionName
        {
            get
            {
                return _TestSectionName;
            }
            set
            {
                OnTestSectionNameChanging(value);
                ReportPropertyChanging("TestSectionName");
                _TestSectionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestSectionName");
                OnTestSectionNameChanged();
            }
        }
        private global::System.String _TestSectionName;
        partial void OnTestSectionNameChanging(global::System.String value);
        partial void OnTestSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="SearchTestByName_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchTestByName_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTestByName_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static SearchTestByName_Result CreateSearchTestByName_Result(global::System.Int32 id, global::System.String name, global::System.Decimal cost)
        {
            SearchTestByName_Result searchTestByName_Result = new SearchTestByName_Result();
            searchTestByName_Result.Id = id;
            searchTestByName_Result.Name = name;
            searchTestByName_Result.Cost = cost;
            return searchTestByName_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="SearchTestByNameForPanel_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchTestByNameForPanel_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTestByNameForPanel_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="testSectionName">Initial value of the TestSectionName property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static SearchTestByNameForPanel_Result CreateSearchTestByNameForPanel_Result(global::System.Int32 id, global::System.String name, global::System.String testSectionName, global::System.Decimal cost)
        {
            SearchTestByNameForPanel_Result searchTestByNameForPanel_Result = new SearchTestByNameForPanel_Result();
            searchTestByNameForPanel_Result.Id = id;
            searchTestByNameForPanel_Result.Name = name;
            searchTestByNameForPanel_Result.TestSectionName = testSectionName;
            searchTestByNameForPanel_Result.Cost = cost;
            return searchTestByNameForPanel_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestSectionName
        {
            get
            {
                return _TestSectionName;
            }
            set
            {
                OnTestSectionNameChanging(value);
                ReportPropertyChanging("TestSectionName");
                _TestSectionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestSectionName");
                OnTestSectionNameChanged();
            }
        }
        private global::System.String _TestSectionName;
        partial void OnTestSectionNameChanging(global::System.String value);
        partial void OnTestSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="SearchTestSection_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SearchTestSection_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTestSection_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SearchTestSection_Result CreateSearchTestSection_Result(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            SearchTestSection_Result searchTestSection_Result = new SearchTestSection_Result();
            searchTestSection_Result.Id = id;
            searchTestSection_Result.Name = name;
            searchTestSection_Result.IsActive = isActive;
            return searchTestSection_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LabManager_ClientModel", Name="TestResultsGet_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TestResultsGet_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestResultsGet_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="testId">Initial value of the TestId property.</param>
        /// <param name="analysisId">Initial value of the AnalysisId property.</param>
        public static TestResultsGet_Result CreateTestResultsGet_Result(global::System.String name, global::System.String range, global::System.Int32 status, global::System.Int32 testId, global::System.Int32 analysisId)
        {
            TestResultsGet_Result testResultsGet_Result = new TestResultsGet_Result();
            testResultsGet_Result.Name = name;
            testResultsGet_Result.Range = range;
            testResultsGet_Result.Status = status;
            testResultsGet_Result.TestId = testId;
            testResultsGet_Result.AnalysisId = analysisId;
            return testResultsGet_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> STT
        {
            get
            {
                return _STT;
            }
            set
            {
                OnSTTChanging(value);
                ReportPropertyChanging("STT");
                _STT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STT");
                OnSTTChanged();
            }
        }
        private Nullable<global::System.Int64> _STT;
        partial void OnSTTChanging(Nullable<global::System.Int64> value);
        partial void OnSTTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestId
        {
            get
            {
                return _TestId;
            }
            set
            {
                OnTestIdChanging(value);
                ReportPropertyChanging("TestId");
                _TestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestId");
                OnTestIdChanged();
            }
        }
        private global::System.Int32 _TestId;
        partial void OnTestIdChanging(global::System.Int32 value);
        partial void OnTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnalysisId
        {
            get
            {
                return _AnalysisId;
            }
            set
            {
                OnAnalysisIdChanging(value);
                ReportPropertyChanging("AnalysisId");
                _AnalysisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnalysisId");
                OnAnalysisIdChanged();
            }
        }
        private global::System.Int32 _AnalysisId;
        partial void OnAnalysisIdChanging(global::System.Int32 value);
        partial void OnAnalysisIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                OnResultIdChanging(value);
                ReportPropertyChanging("ResultId");
                _ResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultId");
                OnResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ResultId;
        partial void OnResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnResultIdChanged();

        #endregion
    }

    #endregion
    
}
